{"remainingRequest":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/src/components/user/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/src/components/user/Users.vue","mtime":1644935477432},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <div>\n    <!--面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!--卡片视图区域-->\n    <el-card class=\"box-card\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <!-- 搜索与添加区域 -->\n          <el-input v-model=\"queryInfo.query\" class=\"input-with-select\" clearable placeholder=\"请输入内容\"\n                    @clear=\"getUserList\" @keyup.enter.native=\"getUserList\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\n        </el-col>\n      </el-row>\n\n      <!--  用户列表区域-->\n      <el-table v-loading=\"!userList.length\"\n                :data=\"userList\"\n                :stripe=\"true\"\n                border\n                element-loading-text=\"拼命加载中\"\n                style=\"width: 100%\">\n        <el-table-column label=\"#\"\n                         type=\"index\">\n        </el-table-column>\n        <el-table-column label=\"用户名\"\n                         prop=\"username\">\n        </el-table-column>\n        <el-table-column label=\"电话\"\n                         prop=\"mobile\">\n        </el-table-column>\n        <el-table-column label=\"邮箱\"\n                         prop=\"email\">\n        </el-table-column>\n        <el-table-column label=\"角色\"\n                         prop=\"role_name\">\n        </el-table-column>\n        <el-table-column label=\"状态\">\n          <!-- 作用域插槽渲染状态这一列 -->\n          <template slot-scope=\"scope\">\n            <el-switch\n              v-model=\"scope.row.mg_state\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\"\n              @change=\"userStateChanged(scope.row)\">\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-tooltip :enterable=\"false\" class=\"item\" content=\"修改用户\" effect=\"dark\" placement=\"top\">\n              <el-button icon=\"el-icon-edit\" size=\"mini\" type=\"primary\"\n                         @click=\"showEditDialog(scope.row.id)\"></el-button>\n            </el-tooltip>\n\n            <!-- 删除按钮-->\n            <el-tooltip :enterable=\"false\" class=\"item\" content=\"删除用户\" effect=\"dark\" placement=\"top\">\n              <el-button icon=\"el-icon-delete\" size=\"mini\" type=\"danger\"\n                         @click=\"removeUserById(scope.row.id)\"></el-button>\n            </el-tooltip>\n\n            <!-- 分配角色按钮-->\n            <el-tooltip :enterable=\"false\" class=\"item\" content=\"分配角色\" effect=\"dark\" placement=\"top\">\n              <el-button icon=\"el-icon-setting\" size=\"mini\" type=\"warning\" @click=\"setRole(scope.row)\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!--分页区域-->\n      <el-pagination\n        :current-page=\"queryInfo.pagenum\"\n        :page-size=\"this.queryInfo.pagesize\"\n        :page-sizes=\"[2, 4, 5, 10]\"\n        :total=\"total\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\">\n      </el-pagination>\n    </el-card>\n\n    <!-- 添加用户的对话框 -->\n    <el-dialog\n      :visible.sync=\"addDialogVisible\"\n      title=\"添加用户\"\n      width=\"35%\"\n      @close=\"addDialogClosed\">\n      <!-- 内容主体区域 -->\n      <el-form ref=\"addFormRef\" :model=\"addForm\" :rules=\"addFormRules\" label-width=\"70px\">\n        <!-- prop=username 对应了 addFormRules中的username校验规则-->\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机\" prop=\"mobile\">\n          <el-input v-model=\"addForm.mobile\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部区域 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n  </span>\n    </el-dialog>\n\n    <!--修改用户对话框-->\n    <el-dialog\n      :visible.sync=\"editDialogVisible\"\n      title=\"修改用户\"\n      width=\"35%\"\n      @close=\"editDialogClosed\">\n      <!-- 内容主体区域 -->\n      <el-form ref=\"editFormRef\" :model=\"editForm\" :rules=\"addFormRules\" label-width=\"70px\">\n        <!-- prop=username 对应了 addFormRules中的username校验规则-->\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"editForm.username\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"editForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机\" prop=\"mobile\">\n          <el-input v-model=\"editForm.mobile\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n  </span>\n    </el-dialog>\n\n    <!--分配角色的对话框-->\n    <el-dialog\n      :visible.sync=\"setRoleDialogVisible\"\n      title=\"分配角色\"\n      width=\"35%\"\n      @close=\"setRoleDialogClosed\">\n      <div>\n        <p>当前的用户: {{ userInfo.username }}</p>\n        <p>当前的角色: {{ userInfo.role_name }}</p>\n        <p>分配新角色:\n          <el-select v-model=\"selectedRoled\" placeholder=\"请选择\">\n            <el-option\n              v-for=\"item in rolesList\"\n              :key=\"item.id\"\n              :label=\"item.roleName\"\n              :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </p>\n\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"setRoleDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"saveRoleInfo()\">确 定</el-button>\n  </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Users.vue',\n  data () {\n    // 验证邮箱的规则\n    var checkEmail = (rule, value, cb) => {\n      // 验证邮箱的正则表达式\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\n      if (regEmail.test(value)) {\n        // 合法的邮箱\n        return cb()\n      }\n      cb(new Error('请输入合法的邮箱!'))\n    }\n\n    // 验证手机号的规则\n    var checkMobile = (rule, value, cb) => {\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\n      if (regMobile.test(value)) {\n        // 合法的手机号\n        return cb()\n      }\n      cb(new Error('请输入合法的手机号!'))\n    }\n\n    return {\n      // 获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        // 当前的页数\n        pagenum: 1,\n        pagesize: 2\n      },\n      userList: [],\n      total: 0,\n      // 控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      // 添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: ''\n      },\n      // 添加表单的验证规则对象\n      addFormRules: {\n        username: [\n          {\n            required: true,\n            message: '请输入用户名',\n            trigger: 'blur'\n          },\n          {\n            min: 3,\n            max: 10,\n            message: '用户名长度在 3 到 10 个字符',\n            trigger: 'blur'\n          }\n        ],\n        // 验证密码是否合法\n        password: [\n          {\n            required: true,\n            message: '请输入密码',\n            trigger: 'blur'\n          },\n          {\n            min: 6,\n            max: 16,\n            message: '密码长度在 6 到 16 个字符',\n            trigger: 'blur'\n          }\n        ],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [\n          {\n            required: true,\n            message: '请输入手机号',\n            trigger: 'blur'\n          }, {\n            validator: checkMobile,\n            trigger: 'blur'\n          }\n        ]\n      },\n      // 控制修改用户对话框的显示和隐藏\n      editDialogVisible: false,\n      // 查询到的用户信息对象\n      editForm: {\n        id: '',\n        username: '',\n        email: '',\n        mobile: '',\n        rid: ''\n      },\n      // 控制分配角色对话框的显示与隐藏\n      setRoleDialogVisible: false,\n      // 需要被分配角色的用户信息\n      userInfo: {},\n      // 所有角色的数据列表\n      rolesList: [],\n      // 已选中的角色Id值\n      selectedRoled: '',\n      // loading状态控制\n      loading: false\n    }\n  },\n  created () {\n    this.getUserList()\n  },\n  methods: {\n    async getUserList () {\n      this.loading = true\n      const { data: res } = await this.$http.get('users', { params: this.queryInfo })\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取用户列表失败!')\n      }\n      this.userList = res.data.users\n      this.total = res.data.total\n      this.loading = false\n      console.log(res)\n    },\n    /**\n     * 监听 pagesize 改变的事件\n     * @param newSize\n     */\n    handleSizeChange (newSize) {\n      // console.log(newSize)\n      this.queryInfo.pagesize = newSize\n      this.getUserList()\n    },\n    /**\n     * 监听 页面值 改变的事件\n     * @param newPage\n     */\n    handleCurrentChange (newPage) {\n      // console.log(newPage)\n      this.queryInfo.pagenum = newPage\n      this.getUserList()\n    },\n    /**\n     * 监听 Switch 开关改变, 改变用户状态\n     * @param userInfo\n     */\n    async userStateChanged (userInfo) {\n      console.log(userInfo)\n      const { data: res } = await this.$http.put(`users/${userInfo.id}/state/${userInfo.mg_state}`)\n      if (res.meta.status !== 200) {\n        userInfo.mg_state = !userInfo.mg_state\n        return this.$message.error('更新用户状态失败!')\n      }\n      this.$message.success('更新用户状态成功!')\n    },\n    /**\n     * 监听 添加用户对话框的关闭事件\n     */\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    /**\n     * 点击按钮, 添加新用户\n     */\n    addUser () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        // 可以发起添加用户的网络请求\n        const { data: res } = await this.$http.post('users', this.addForm)\n        console.log(res)\n        if (res.meta.status !== 201) {\n          this.$message.error('添加用户失败!')\n        } else {\n          // 先隐藏添加用户的对话框\n          this.addDialogVisible = false\n          // 再重新获取用户列表, 来刷新页面\n          this.getUserList()\n          // 最后提示添加成功\n          this.$message.success('添加用户成功!')\n        }\n      })\n    },\n    /**\n     * 展示编辑用户的对话框\n     * @param id\n     */\n    async showEditDialog (id) {\n      // console.log(id)\n      const { data: res } = await this.$http.get(`users/${id}`)\n      if (res.meta.status !== 200) {\n        //\n        this.$message.error('查询用户信息失败!')\n      }\n      console.log(res)\n      this.editForm = res.data\n      this.editDialogVisible = true\n    },\n    /**\n     * 监听修改用户对话框的关闭事件\n     */\n    editDialogClosed () {\n      // 当第一次打开修改表单, 若触发数据校验提示, 在第二次打开还会出来\n      // 这时候就是需要使用下面这行代码重置修改表单\n      this.$refs.editFormRef.resetFields()\n    },\n    /**\n     * 修改用户信息并提交\n     */\n    async editUserInfo () {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        // 可以发送修改用户的网络请求\n        const { data: res } = await this.$http.put(`users/${this.editForm.id}`, {\n          email: this.editForm.email,\n          mobile: this.editForm.mobile\n        })\n        if (res.meta.status !== 200) {\n          this.$message.error('更新用户信息失败!')\n        } else {\n          // 先隐藏修改用户的对话框\n          this.editDialogVisible = false\n          // 再重新获取用户列表, 来刷新页面\n          this.getUserList()\n          // 最后提示修改成功\n          this.$message.success('更新用户信息成功!')\n        }\n      })\n    },\n    /**\n     * 根据Id删除对应的用户信息\n     * @param id\n     */\n    async removeUserById (id) {\n      // console.log(id)\n      // 弹框询问用户是否删除数据\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => {\n        return err\n      })\n      // 如果用户确认删除, 则返回值为字符串 confirm\n      // 如果用户取消删除, 则返回值为字符串 cancel\n      // console.log(confirmResult)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除!')\n      } else {\n        console.log('确认了删除!')\n        const { data: res } = await this.$http.delete(`users/${id}`)\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除用户失败!')\n        } else {\n          // 重新获取用户列表, 来刷新页面\n          this.getUserList()\n          return this.$message.success('删除用户成功!')\n        }\n      }\n    },\n    /**\n     * 展示分配角色的对话框, 并把用户信息保存起来到一个变量userInfo中\n     * @param userInfo 用户信息\n     */\n    async setRole (userInfo) {\n      this.userInfo = userInfo\n\n      // 在展示对话框之前, 获取所有的角色列表\n      const { data: res } = await this.$http.get('roles')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取用户列表失败!')\n      }\n\n      this.rolesList = res.data\n      console.log(this.rolesList)\n      this.setRoleDialogVisible = true\n    },\n    /**\n     * 点击按钮, 分配角色\n     */\n    async saveRoleInfo () {\n      if (!this.selectedRoled) {\n        return this.$message.error('请选择角色')\n      }\n      const { data: res } = await this.$http.put(`users/${this.userInfo.id}/role`, {\n        rid: this.selectedRoled\n      })\n      if (res.meta.status !== 200) {\n        return this.$message.error('更新角色失败!')\n      } else {\n        this.getUserList()\n        // 隐藏对话框\n        this.setRoleDialogVisible = false\n        return this.$message.success('更新角色成功!')\n      }\n    },\n    /**\n     * 监听分配角色对话框的关闭事件\n     */\n    setRoleDialogClosed () {\n      this.selectedRoled = ''\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>\n"]}]}