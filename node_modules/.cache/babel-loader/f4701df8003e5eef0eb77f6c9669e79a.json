{"remainingRequest":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/thread-loader/dist/cjs.js!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/babel-loader/lib/index.js!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/src/components/power/Roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/src/components/power/Roles.vue","mtime":1644935477432},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9ibGFja2RvY3Rvci9Eb3dubG9hZHMvMF9jb2RlL3dlYl9jb2RlL2NvbS1lLWNvbW1lcmNlL3Z1ZV9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9ibGFja2RvY3Rvci9Eb3dubG9hZHMvMF9jb2RlL3dlYl9jb2RlL2NvbS1lLWNvbW1lcmNlL3Z1ZV9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUm9sZXMnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDmiYDmnInop5LoibLliJfooajmlbDmja4KICAgICAgcm9sZXNMaXN0OiBbXSwKICAgICAgLy8g5o6n5Yi25YiG6YWN5p2D6ZmQ5a+56K+d5qGG55qE5pi+56S65LiO6ZqQ6JePCiAgICAgIHNldFJpZ2h0RGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIC8vIOaJgOacieadg+mZkOaVsOaNrgogICAgICByaWdodHNMaXN0OiBbXSwKICAgICAgLy8g5qCR5b2i5o6n5Lu255qE5bGe5oCn57uR5a6a5a+56LGhCiAgICAgIHRyZWVQcm9wczogewogICAgICAgIGxhYmVsOiAnYXV0aE5hbWUnLAogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nCiAgICAgIH0sCiAgICAgIC8vIOm7mOiupOmAieS4reeahOiKgueCuWlk5YC85pWw57uECiAgICAgIGRlZktleXM6IFtdLAogICAgICAvLyDlvZPliY3ljbPlsIbliIbphY3mnYPpmZDnmoTop5LoibJpZAogICAgICByb2xlSWQ6ICcnLAogICAgICAvLyDmjqfliLbmt7vliqDop5LoibLlr7nor53moYbnmoTmmL7npLrkuI7pmpDol48KICAgICAgYWRkUm9sZURpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAvLyB0aWFuamlhCiAgICAgIGFkZEZvcm06IHsKICAgICAgICByb2xlTmFtZTogJycsCiAgICAgICAgcm9sZURlc2M6ICcnCiAgICAgIH0sCiAgICAgIGFkZEZvcm1SdWxlczogewogICAgICAgIHJvbGVOYW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl6KeS6Imy5ZCN56ewJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogMiwKICAgICAgICAgIG1heDogNiwKICAgICAgICAgIG1lc3NhZ2U6ICfop5LoibLlkI3np7Dplb/luqblnKggMiDliLAgNiDkuKrlrZfnrKYnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgcm9sZURlc2M6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXop5LoibLmj4/ov7AnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgZWRpdEZvcm06IHt9LAogICAgICBlZGl0Um9sZURpYWxvZ1Zpc2libGU6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0Um9sZXNMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioKICAgICAqIOiOt+WPluaJgOacieinkuiJsuWIl+ihqAogICAgICovCiAgICBnZXRSb2xlc0xpc3Q6IGZ1bmN0aW9uIGdldFJvbGVzTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpcyQkaHR0cCRnZSwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kaHR0cC5nZXQoJ3JvbGVzJyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpcyQkaHR0cCRnZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXMkJGh0dHAkZ2UuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bop5LoibLliJfooajlpLHotKUhJykpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfdGhpcy5yb2xlc0xpc3QgPSByZXMuZGF0YTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKCiAgICAvKioKICAgICAqIOagueaNrmlk5Yig6Zmk5a+55bqU55qE5p2D6ZmQCiAgICAgKiBAcGFyYW0gcm9sZQogICAgICogQHBhcmFtIHJvbGVJZAogICAgICovCiAgICByZW1vdmVSaWdodEJ5SWQ6IGZ1bmN0aW9uIHJlbW92ZVJpZ2h0QnlJZChyb2xlLCByb2xlSWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgY29uZmlybVJlc3VsdCwgX3lpZWxkJF90aGlzMiQkaHR0cCRkLCByZXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRjb25maXJtKCfmraTmk43kvZzlsIbmsLjkuYXliKDpmaTor6XmnYPpmZAsIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycjsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBjb25maXJtUmVzdWx0ID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEoY29uZmlybVJlc3VsdCAhPT0gJ2NvbmZpcm0nKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoJ+WPlua2iOS6huWIoOmZpCcpKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kaHR0cC5kZWxldGUoInJvbGVzLyIuY29uY2F0KHJvbGUuaWQsICIvcmlnaHRzLyIpLmNvbmNhdChyb2xlSWQpKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzMiQkaHR0cCRkID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXMyJCRodHRwJGQuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF90aGlzMi4kbWVzc2FnZS5lcnJvcign5Yig6Zmk5p2D6ZmQ5aSx6LSlIScpKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIC8vIHRoaXMuZ2V0Um9sZXNMaXN0KCkKICAgICAgICAgICAgICAgIHJvbGUuY2hpbGRyZW4gPSByZXMuZGF0YTsKCiAgICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5p2D6ZmQ5oiQ5YqfIScpOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICog5bGV56S65YiG6YWN5p2D6ZmQ5a+56K+d5qGGCiAgICAgKiBAcGFyYW0gcm9sZQogICAgICovCiAgICBzaG93U2V0UmlnaHREaWFsb2c6IGZ1bmN0aW9uIHNob3dTZXRSaWdodERpYWxvZyhyb2xlKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpczMkJGh0dHAkZywgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMzLnJvbGVJZCA9IHJvbGUuaWQ7IC8vIOiOt+WPluaJgOacieadg+mZkOaVsOaNrgoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuJGh0dHAuZ2V0KCdyaWdodHMvdHJlZScpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXMzJCRodHRwJGcgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczMkJGh0dHAkZy5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBfdGhpczMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluadg+mZkOaVsOaNruWksei0pSEnKSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIC8vIOiOt+WPluWIsOadg+mZkOaVsOaNruS/neWtmOWIsGRhdGHkuK0KICAgICAgICAgICAgICAgIF90aGlzMy5yaWdodHNMaXN0ID0gcmVzLmRhdGE7IC8vIOmAkuW9kuiOt+WPluS4iee6p+iKgueCueeahElkCgogICAgICAgICAgICAgICAgX3RoaXMzLmdldExlYWZLZXlzKHJvbGUsIF90aGlzMy5kZWZLZXlzKTsKCiAgICAgICAgICAgICAgICBfdGhpczMuc2V0UmlnaHREaWFsb2dWaXNpYmxlID0gdHJ1ZTsgLy8gY29uc29sZS5sb2codGhpcy5yaWdodHNMaXN0KQoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICog6YCa6L+H6YCS5b2S55qE5b2i5byPLCDojrflj5bop5LoibLkuIvnmoTmiYDmnInkuInnuqfmnYPpmZDnmoRpZCwg5bm25L+d5a2Y5YiwZGVmS2V5c+aVsOe7hOS4rQogICAgICogQHBhcmFtIG5vZGUKICAgICAqIEBwYXJhbSBhcnIKICAgICAqLwogICAgZ2V0TGVhZktleXM6IGZ1bmN0aW9uIGdldExlYWZLZXlzKG5vZGUsIGFycikgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIC8vIOWmguaenOW9k+WJjW5vZGXoioLngrnkuI3ljIXlkKsgY2hpbGRyZW4g5bGe5oCnLCDliJnmmK/kuInnuqfoioLngrkKICAgICAgaWYgKCFub2RlLmNoaWxkcmVuKSB7CiAgICAgICAgcmV0dXJuIGFyci5wdXNoKG5vZGUuaWQpOwogICAgICB9CgogICAgICBub2RlLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBfdGhpczQuZ2V0TGVhZktleXMoaXRlbSwgYXJyKTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICog55uR5ZCsIOWIhumFjeadg+mZkOWvueivneahhueahOWFs+mXreS6i+S7tgogICAgICovCiAgICBzZXRSaWdodERpYWxvZ0Nsb3NlZDogZnVuY3Rpb24gc2V0UmlnaHREaWFsb2dDbG9zZWQoKSB7CiAgICAgIHRoaXMuZGVmS2V5cyA9IFtdOwogICAgfSwKCiAgICAvKioKICAgICAqIOeCueWHu+S4uuinkuiJsuWIhumFjeadg+mZkAogICAgICovCiAgICBhbGxvdFJpZ2h0czogZnVuY3Rpb24gYWxsb3RSaWdodHMoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGtleXMsIGlkU3RyLCBfeWllbGQkX3RoaXM1JCRodHRwJHAsIHJlczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAgICogLi4uIOS7o+ihqOWxleW8gOi/kOeul+espgogICAgICAgICAgICAgICAgICogLi4udGhpcy4kcmVmcy50cmVlUmVmLmdldENoZWNrZWRLZXlzCiAgICAgICAgICAgICAgICAgKi8KCiAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAqIGJ1Z+eCuSA6IOWHuumUmeWcsOeCuSAuLi50aGlzLiRyZWZzLnRyZWVSZWYuZ2V0Q2hlY2tlZEtleXMsCiAgICAgICAgICAgICAgICAgKiDljp/lm6A6ICDlsJHlhpnkuoYgIGdldENoZWNrZWRLZXlzKCkg5ZCO6Z2i55qEIOaLrOWPty4g5Ye6546w5LqG5LiL6Z2i55qE6ZSZ6K+v5L+h5oGvCiAgICAgICAgICAgICAgICAgKiBbVnVlIHdhcm5dOiBFcnJvciBpbiB2LW9uIGhhbmRsZXIgKFByb21pc2UvYXN5bmMpOiAiVHlwZUVycm9yOiBJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS4KICAgICAgICAgICAgICAgICAqIEluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iCiAgICAgICAgICAgICAgICAgKiAjCiAgICAgICAgICAgICAgICAgKiBUeXBlRXJyb3I6IEludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLgogICAgICAgICAgICAgICAgICogSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLgogICAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgICBrZXlzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfdGhpczUuJHJlZnMudHJlZVJlZi5nZXRDaGVja2VkS2V5cygpKSwgX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzNS4kcmVmcy50cmVlUmVmLmdldEhhbGZDaGVja2VkS2V5cygpKSk7CiAgICAgICAgICAgICAgICBpZFN0ciA9IGtleXMuam9pbignLCcpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS4kaHR0cC5wb3N0KCJyb2xlcy8iLmNvbmNhdChfdGhpczUucm9sZUlkLCAiL3JpZ2h0cyIpLCB7CiAgICAgICAgICAgICAgICAgIHJpZHM6IGlkU3RyCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzNSQkaHR0cCRwID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXM1JCRodHRwJHAuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIF90aGlzNS4kbWVzc2FnZS5lcnJvcign5YiG6YWN5p2D6ZmQ5aSx6LSlIScpKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF90aGlzNS5nZXRSb2xlc0xpc3QoKTsKCiAgICAgICAgICAgICAgICBfdGhpczUuc2V0UmlnaHREaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgX3RoaXM1LiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIhumFjeadg+mZkOaIkOWKnyEnKSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDmt7vliqDop5LoibIKICAgICAqLwogICAgYWRkUm9sZTogZnVuY3Rpb24gYWRkUm9sZSgpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM2LiRyZWZzLmFkZEZvcm1SZWYudmFsaWRhdGUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSh2YWxpZCkgewogICAgICAgICAgICAgICAgICAgIHZhciBfeWllbGQkX3RoaXM2JCRodHRwJHAsIHJlczsKCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNi4kaHR0cC5wb3N0KCdyb2xlcycsIF90aGlzNi5hZGRGb3JtKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzNiQkaHR0cCRwID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXM2JCRodHRwJHAuZGF0YTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShyZXMubWV0YS5zdGF0dXMgIT09IDIwMSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIF90aGlzNi4kbWVzc2FnZS5lcnJvcign5re75Yqg6KeS6Imy5aSx6LSlIScpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzNi5hZGRSb2xlRGlhbG9nVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzNi5nZXRSb2xlc0xpc3QoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczYuJG1lc3NhZ2Uuc3VjY2Vzcygn5re75Yqg6KeS6Imy5oiQ5YqfIScpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWU1KTsKICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTYpOwogICAgICB9KSkoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDnm5HlkKwg5re75Yqg6KeS6Imy5a+56K+d5qGG55qE5YWz6Zet5LqL5Lu2CiAgICAgKi8KICAgIGFkZERpYWxvZ0Nsb3NlZDogZnVuY3Rpb24gYWRkRGlhbG9nQ2xvc2VkKCkgewogICAgICB0aGlzLiRyZWZzLmFkZEZvcm1SZWYucmVzZXRGaWVsZHMoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDnvJbovpHop5LoibIKICAgICAqLwogICAgZWRpdFJvbGU6IGZ1bmN0aW9uIGVkaXRSb2xlKCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczcuJHJlZnMuZWRpdEZvcm1SZWYudmFsaWRhdGUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcodmFsaWQpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgX3lpZWxkJF90aGlzNyQkaHR0cCRwLCByZXM7CgogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczcuJGh0dHAucHV0KCJyb2xlcy8iLmNvbmNhdChfdGhpczcuZWRpdEZvcm0ucm9sZUlkKSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb2xlTmFtZTogX3RoaXM3LmVkaXRGb3JtLnJvbGVOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb2xlRGVzYzogX3RoaXM3LmVkaXRGb3JtLnJvbGVEZXNjCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzNyQkaHR0cCRwID0gX2NvbnRleHQ3LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXM3JCRodHRwJHAuZGF0YTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM3LiRtZXNzYWdlLmVycm9yKCfmm7TmlrDop5LoibLkv6Hmga/lpLHotKUhJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczcuZWRpdFJvbGVEaWFsb2dWaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczcuZ2V0Um9sZXNMaXN0KCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczcuJG1lc3NhZ2Uuc3VjY2Vzcygn5pu05paw6KeS6Imy5oiQ5YqfIScpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTcpOwogICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSgpKTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU4KTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICog5bGV56S657yW6L6R6KeS6Imy55qE5a+56K+d5qGGCiAgICAgKiBAcGFyYW0gcm9sZUlkCiAgICAgKi8KICAgIHNob3dFZGl0RGlhbG9nOiBmdW5jdGlvbiBzaG93RWRpdERpYWxvZyhyb2xlSWQpIHsKICAgICAgdmFyIF90aGlzOCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOSgpIHsKICAgICAgICB2YXIgX3lpZWxkJF90aGlzOCQkaHR0cCRnLCByZXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOSQoX2NvbnRleHQ5KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OS5wcmV2ID0gX2NvbnRleHQ5Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM4LiRodHRwLmdldCgicm9sZXMvIi5jb25jYXQocm9sZUlkKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczgkJGh0dHAkZyA9IF9jb250ZXh0OS5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzOCQkaHR0cCRnLmRhdGE7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0OS5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OS5hYnJ1cHQoInJldHVybiIsIF90aGlzOC4kbWVzc2FnZS5lcnJvcign5p+l6K+i6KeS6Imy5L+h5oGv5aSx6LSlJykpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfdGhpczguZWRpdEZvcm0gPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzOC5lZGl0Um9sZURpYWxvZ1Zpc2libGUgPSB0cnVlOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU5KTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICog5qC55o2u6KeS6ImyaWTliKDpmaTop5LoibIKICAgICAqIEBwYXJhbSByb2xlSWQKICAgICAqLwogICAgcmVtb3ZlUm9sZUJ5SWQ6IGZ1bmN0aW9uIHJlbW92ZVJvbGVCeUlkKHJvbGVJZCkgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMCgpIHsKICAgICAgICB2YXIgY29uZmlybVJlc3VsdCwgX3lpZWxkJF90aGlzOSQkaHR0cCRkLCByZXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTAkKF9jb250ZXh0MTApIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMC5wcmV2ID0gX2NvbnRleHQxMC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQxMC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczkuJGNvbmZpcm0oJ+atpOaTjeS9nOWwhuawuOS5heWIoOmZpOivpeinkuiJsiwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBfdGhpczkuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5bey5Y+W5raI5Yig6ZmkJwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBjb25maXJtUmVzdWx0ID0gX2NvbnRleHQxMC5zZW50OwoKICAgICAgICAgICAgICAgIGlmICghKGNvbmZpcm1SZXN1bHQgPT09ICdjb25maXJtJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQxMC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM5LiRodHRwLmRlbGV0ZSgicm9sZXMvIi5jb25jYXQocm9sZUlkKSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczkkJGh0dHAkZCA9IF9jb250ZXh0MTAuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczkkJGh0dHAkZC5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDEwLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuYWJydXB0KCJyZXR1cm4iLCBfdGhpczkuJG1lc3NhZ2UuZXJyb3IoJ+WIoOmZpOinkuiJsuWksei0pSEnKSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfdGhpczkuZ2V0Um9sZXNMaXN0KCk7CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuYWJydXB0KCJyZXR1cm4iLCBfdGhpczkuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk6KeS6Imy5oiQ5YqfIScpKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTEwKTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKgogICAgICog55uR5ZCsIOS/ruaUueinkuiJsuWvueivneahhueahOWFs+mXreS6i+S7tgogICAgICovCiAgICBlZGl0RGlhbG9nQ2xvc2VkOiBmdW5jdGlvbiBlZGl0RGlhbG9nQ2xvc2VkKCkgewogICAgICB0aGlzLiRyZWZzLmVkaXRGb3JtUmVmLnJlc2V0RmllbGRzKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Roles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!--面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图-->\n    <el-card>\n      <!--添加角色区域-->\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"addRoleDialogVisible = true\">添加角色</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- 角色列表区域-->\n      <el-table\n        v-loading=\"!rolesList.length\"\n        :data=\"rolesList\"\n        :stripe=\"true\"\n        border\n        element-loading-text=\"拼命加载中\"\n        row-key=\"id\"\n        style=\"width: 100%\">\n        <!--展开列-->\n        <el-table-column type=\"expand\">\n          <!--作用域插槽-->\n          <template slot-scope=\"scope\">\n            <!--<pre>元素表示预先格式化的文本，该文本将完全按照 HTML 文件中所写的方式呈现-->\n            <!--<pre>-->\n            <!--{{ scope.row }}-->\n            <!--</pre>-->\n            <el-row v-for=\"(item, i1) in scope.row.children\" :key=\"item.id\"\n                    :class=\"['bd-bottom', i1 ===0 ? 'bd-top': '' ,'vcenter']\">\n              <!--渲染一级权限-->\n              <el-col :span=\"5\">\n                <el-tag closable @close=\"removeRightById(scope.row, item.id)\">\n                  {{ item.authName }}\n                </el-tag>\n                <i class=\"el-icon-caret-right\"></i>\n              </el-col>\n              <!--渲染二级和三级权限-->\n              <el-col :span=\"19\">\n                <!--  通过for循环, 嵌套渲染二级权限 -->\n                <el-row v-for=\"(subItem,i2) in item.children\" :key=\"subItem.id\"\n                        :class=\"[i2 === 0 ? '':'bd-top', 'vcenter']\">\n                  <el-col :span=\"6\">\n                    <el-tag closable type=\"success\" @close=\"removeRightById(scope.row, subItem.id)\">\n                      {{ subItem.authName }}\n                    </el-tag>\n                    <i class=\"el-icon-caret-right\"></i>\n                  </el-col>\n                  <el-col :span=\"18\">\n                    <el-tag v-for=\"(item3) in subItem.children\" :key=\"item3.id\" closable type=\"warning\"\n                            @close=\"removeRightById(scope.row, item3.id)\">\n                      {{ item3.authName }}\n                    </el-tag>\n                  </el-col>\n                </el-row>\n              </el-col>\n            </el-row>\n          </template>\n        </el-table-column>\n        <!-- 索引列 -->\n        <el-table-column label=\"#\"\n                         type=\"index\">\n        </el-table-column>\n        <el-table-column label=\"角色名称\"\n                         prop=\"roleName\">\n        </el-table-column>\n        <el-table-column label=\"角色描述\"\n                         prop=\"roleDesc\">\n        </el-table-column>\n        <!-- 加上了这个with=\"300\", 保证了页面缩小的时候, 三个按钮都在一行上显示-->\n        <el-table-column label=\"操作\" width=\"300px\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-button icon=\"el-icon-edit\" size=\"mini\" type=\"primary\" @click=\"showEditDialog(scope.row.id)\">编辑\n            </el-button>\n\n            <!-- 删除按钮-->\n            <el-button icon=\"el-icon-delete\" size=\"mini\" type=\"danger\" @click=\"removeRoleById(scope.row.id)\">删除\n            </el-button>\n\n            <!-- 分配角色按钮-->\n            <el-button icon=\"el-icon-setting\" size=\"mini\" type=\"warning\" @click=\"showSetRightDialog(scope.row)\">分配权限\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!--分配权限对话框-->\n    <el-dialog\n      :visible.sync=\"setRightDialogVisible\"\n      title=\"分配权限\"\n      width=\"50%\"\n      @close=\"setRightDialogClosed\">\n      <!-- 树形控件\n          bug点:  写出:data=\"rolesList\"  改成 :data=\"rightsList\"\n          #\n          注意点: 这个  node-key=\"id\"  id 猜测是从\n                  :data=\"rightsList\"绑定的rightsList: []数组对象取出来每单个对象的id\n      -->\n      <el-tree ref=\"treeRef\" :data=\"rightsList\"\n               :default-checked-keys=\"defKeys\" :default-expand-all=\"true\"\n               :props=\"treeProps\" node-key=\"id\" show-checkbox></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 添加角色的对话框 -->\n    <el-dialog\n      :visible.sync=\"addRoleDialogVisible\"\n      title=\"添加角色\"\n      width=\"35%\"\n      @close=\"addDialogClosed\">\n      <!-- 内容主体区域 -->\n      <el-form ref=\"addFormRef\" :model=\"addForm\" :rules=\"addFormRules\" label-width=\"70px\">\n        <!-- prop=username 对应了 addFormRules中的username校验规则-->\n        <el-form-item label=\"角色名称\" label-width=\"85px\" prop=\"roleName\">\n          <el-input v-model=\"addForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" label-width=\"85px\" prop=\"roleDesc\">\n          <el-input v-model=\"addForm.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部区域 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"addRoleDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"addRole\">确 定</el-button>\n  </span>\n    </el-dialog>\n\n    <!-- 编辑角色的对话框 -->\n    <el-dialog\n      :visible.sync=\"editRoleDialogVisible\"\n      title=\"编辑角色\"\n      width=\"35%\"\n      @close=\"editDialogClosed\">\n      <!-- 内容主体区域 -->\n      <el-form ref=\"editFormRef\" :model=\"editForm\" :rules=\"addFormRules\" label-width=\"70px\">\n        <!-- prop=username 对应了 addFormRules中的username校验规则-->\n        <el-form-item label=\"角色名称\" label-width=\"85px\" prop=\"roleName\">\n          <el-input v-model=\"editForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" label-width=\"85px\" prop=\"roleDesc\">\n          <el-input v-model=\"editForm.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部区域 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"editRoleDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"editRole\">确 定</el-button>\n  </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Roles',\n  data () {\n    return {\n      // 所有角色列表数据\n      rolesList: [],\n      // 控制分配权限对话框的显示与隐藏\n      setRightDialogVisible: false,\n      // 所有权限数据\n      rightsList: [],\n      // 树形控件的属性绑定对象\n      treeProps: {\n        label: 'authName',\n        children: 'children'\n      },\n      // 默认选中的节点id值数组\n      defKeys: [],\n      // 当前即将分配权限的角色id\n      roleId: '',\n      // 控制添加角色对话框的显示与隐藏\n      addRoleDialogVisible: false,\n      // tianjia\n      addForm: {\n        roleName: '',\n        roleDesc: ''\n      },\n      addFormRules: {\n        roleName: [\n          {\n            required: true,\n            message: '请输入角色名称',\n            trigger: 'blur'\n          },\n          {\n            min: 2,\n            max: 6,\n            message: '角色名称长度在 2 到 6 个字符',\n            trigger: 'blur'\n          }\n        ],\n        roleDesc: [\n          {\n            required: true,\n            message: '请输入角色描述',\n            trigger: 'blur'\n          }\n        ]\n      },\n      editForm: {},\n      editRoleDialogVisible: false\n    }\n  },\n  created () {\n    this.getRolesList()\n  },\n  methods: {\n    /**\n     * 获取所有角色列表\n     */\n    async getRolesList () {\n      const { data: res } = await this.$http.get('roles')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取角色列表失败!')\n      } else {\n        this.rolesList = res.data\n        console.log(this.rolesList)\n      }\n    },\n    /**\n     * 根据id删除对应的权限\n     * @param role\n     * @param roleId\n     */\n    async removeRightById (role, roleId) {\n      // 弹框提示用户是否要删除\n      const confirmResult = await this.$confirm('此操作将永久删除该权限, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch((err) => {\n        return err\n      })\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.error('取消了删除')\n      } else {\n        // console.log('确认了删除')\n        const { data: res } = await this.$http.delete(`roles/${role.id}/rights/${roleId}`)\n        /**\n         * bug点: 这个 meta.status是一个 数字类型, 不是字符串\n         */\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除权限失败!')\n        } else {\n          // this.getRolesList()\n          role.children = res.data\n          this.$message.success('删除权限成功!')\n        }\n      }\n    },\n    /**\n     * 展示分配权限对话框\n     * @param role\n     */\n    async showSetRightDialog (role) {\n      this.roleId = role.id\n      // 获取所有权限数据\n      const { data: res } = await this.$http.get('rights/tree')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取权限数据失败!')\n      } else {\n        // 获取到权限数据保存到data中\n        this.rightsList = res.data\n        // 递归获取三级节点的Id\n        this.getLeafKeys(role, this.defKeys)\n\n        this.setRightDialogVisible = true\n        // console.log(this.rightsList)\n      }\n    },\n    /**\n     * 通过递归的形式, 获取角色下的所有三级权限的id, 并保存到defKeys数组中\n     * @param node\n     * @param arr\n     */\n    getLeafKeys (node, arr) {\n      // 如果当前node节点不包含 children 属性, 则是三级节点\n      if (!node.children) {\n        return arr.push(node.id)\n      }\n      node.children.forEach(item => {\n        this.getLeafKeys(item, arr)\n      })\n    },\n    /**\n     * 监听 分配权限对话框的关闭事件\n     */\n    setRightDialogClosed () {\n      this.defKeys = []\n    },\n    /**\n     * 点击为角色分配权限\n     */\n    async allotRights () {\n      /**\n       * ... 代表展开运算符\n       * ...this.$refs.treeRef.getCheckedKeys\n       */\n\n      /**\n       * bug点 : 出错地点 ...this.$refs.treeRef.getCheckedKeys,\n       * 原因:  少写了  getCheckedKeys() 后面的 括号. 出现了下面的错误信息\n       * [Vue warn]: Error in v-on handler (Promise/async): \"TypeError: Invalid attempt to spread non-iterable instance.\n       * In order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"\n       * #\n       * TypeError: Invalid attempt to spread non-iterable instance.\n       * In order to be iterable, non-array objects must have a [Symbol.iterator]() method.\n       */\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ]\n      console.log(keys)\n\n      const idStr = keys.join(',')\n\n      const { data: res } = await this.$http.post(`roles/${this.roleId}/rights`, { rids: idStr })\n      if (res.meta.status !== 200) {\n        return this.$message.error('分配权限失败!')\n      } else {\n        this.getRolesList()\n        this.setRightDialogVisible = false\n        return this.$message.success('分配权限成功!')\n      }\n    },\n    /**\n     * 添加角色\n     */\n    async addRole () {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        // 可以发起添加角色的网络请求\n        const { data: res } = await this.$http.post('roles', this.addForm)\n        console.log(res)\n        if (res.meta.status !== 201) {\n          return this.$message.error('添加角色失败!')\n        } else {\n          this.addRoleDialogVisible = false\n          this.getRolesList()\n          this.$message.success('添加角色成功!')\n        }\n      })\n    },\n    /**\n     * 监听 添加角色对话框的关闭事件\n     */\n    addDialogClosed () {\n      this.$refs.addFormRef.resetFields()\n    },\n    /**\n     * 编辑角色\n     */\n    async editRole () {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        const { data: res } = await this.$http.put(`roles/${this.editForm.roleId}`,\n          {\n            roleName: this.editForm.roleName,\n            roleDesc: this.editForm.roleDesc\n          }\n        )\n        if (res.meta.status !== 200) {\n          this.$message.error('更新角色信息失败!')\n        } else {\n          this.editRoleDialogVisible = false\n          this.getRolesList()\n          this.$message.success('更新角色成功!')\n        }\n      })\n    },\n    /**\n     * 展示编辑角色的对话框\n     * @param roleId\n     */\n    async showEditDialog (roleId) {\n      const { data: res } = await this.$http.get(`roles/${roleId}`)\n      if (res.meta.status !== 200) {\n        return this.$message.error('查询角色信息失败')\n      } else {\n        this.editForm = res.data\n        this.editRoleDialogVisible = true\n      }\n    },\n    /**\n     * 根据角色id删除角色\n     * @param roleId\n     */\n    async removeRoleById (roleId) {\n      // 弹框询问用户是否直接删除数据\n      const confirmResult = await this.$confirm('此操作将永久删除该角色, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n\n      if (confirmResult === 'confirm') {\n        console.log('确认了删除')\n        const { data: res } = await this.$http.delete(`roles/${roleId}`)\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除角色失败!')\n        } else {\n          this.getRolesList()\n          return this.$message.success('删除角色成功!')\n        }\n      }\n    },\n    /**\n     * 监听 修改角色对话框的关闭事件\n     */\n    editDialogClosed () {\n      this.$refs.editFormRef.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.el-tag {\n  margin: 7px;\n}\n\n.bd-top {\n  border-top: 1px solid #eee;\n}\n\n.bd-bottom {\n  border-bottom: 1px solid #eee;\n}\n\n.vcenter {\n  display: flex;\n  align-items: center;\n}\n</style>\n"],"sourceRoot":"src/components/power"}]}