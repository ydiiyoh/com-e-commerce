{"remainingRequest":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/babel-loader/lib/index.js!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/src/components/goods/Cate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/src/components/goods/Cate.vue","mtime":1644935477432},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/blackdoctor/Downloads/0_code/web_code/com-e-commerce/vue_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!--面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!--卡片视图区域-->\n    <el-card>\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\n        </el-col>\n      </el-row>\n      <!--  表格区域-->\n      <tree-table v-loading=\"!cateList.length\"\n                  :columns=\"cateColumns\"\n                  :data=\"cateList\"\n                  :expand-type=\"false\"\n                  :selection-type=\"false\"\n                  :show-index=\"true\"\n                  :show-row-hover=\"true\"\n                  border\n                  class=\"tree-table\"\n                  element-loading-text=\"拼命加载中\"\n                  index-text=\"#\">\n        <!-- 第一个模板: 是否有效-->\n        <template slot=\"isOk\" slot-scope=\"scope\">\n          <i v-if=\"scope.row.cat_deleted === false\"\n             class=\"el-icon-success\"\n             style=\"color: lightgreen\"></i>\n          <i v-else class=\"el-icon-error\" style=\"color: red\"></i>\n        </template>\n\n        <!-- 第二个模板: 排序-->\n        <template slot=\"order\" slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.cat_level === 0\" size=\"mini\">一级</el-tag>\n          <el-tag v-else-if=\"scope.row.cat_level === 1\" size=\"mini\" type=\"success\">二级</el-tag>\n          <el-tag v-else size=\"mini\" type=\"warning\">三级</el-tag>\n        </template>\n\n        <!-- 第二个模板: 操作-->\n        <template slot=\"opt\" slot-scope=\"scope\">\n          <el-button icon=\"el-icon-edit\" size=\"mini\" type=\"primary\" @click=\"showEditDialog(scope.row.cat_id)\">编辑\n          </el-button>\n          <el-button icon=\"el-icon-delete\" size=\"mini\" type=\"danger\" @click=\"removeCateById(scope.row.cat_id)\">删除\n          </el-button>\n        </template>\n      </tree-table>\n\n      <!--  分页区域-->\n      <el-pagination\n        :current-page=\"this.queryInfo.pagenum\"\n        :page-size=\"this.queryInfo.pagesize\"\n        :page-sizes=\"[3,5,10,15]\"\n        :total=\"this.total\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\">\n      </el-pagination>\n    </el-card>\n\n    <!-- 添加分类的对话框 -->\n    <el-dialog :visible.sync=\"addCateDialogVisible\" title=\"添加分类\" @close=\"addCateDialogClosed\">\n      <el-form ref=\"addCateFormRef\" :model=\"addCateForm\" label-width=\"100px\">\n        <el-form-item label=\"分类名称: \" prop=\"cat_name\">\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父级分类: \">\n          <!-- options 用来指定数据源\n          cascadeProps 用来指定配置对象\n          -->\n          <el-cascader\n            v-model=\"selectedKeys\"\n            :change-on-select=\"true\"\n            :options=\"parentCateList\"\n            :props=\"cascadeProps\"\n            clearable\n            @change=\"parentCateChanged\"></el-cascader>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 修改分类的对话框 -->\n    <el-dialog :visible.sync=\"editCateDialogVisible\" title=\"修改分类\" @close=\"editCateDialogClosed\">\n      <el-form ref=\"editCateFormRef\" :model=\"editCateForm\" label-width=\"100px\">\n        <el-form-item label=\"分类名称: \" prop=\"cat_name\">\n          <el-input v-model=\"editCateForm.cat_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editCateDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editCate\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Cate',\n  data () {\n    return {\n      // 查询条件\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      // 商品分类的数据列表, 默认为空\n      cateList: [],\n      // 总数据条数\n      total: 0,\n      // 为table指定列的定义\n      cateColumns: [\n        {\n          label: '分类名称',\n          prop: 'cat_name'\n        },\n        {\n          label: '是否有效',\n          // 表示, 将当前列定义为模板列\n          type: 'template',\n          // 表示当前列使用模板名称\n          template: 'isOk'\n        },\n        {\n          label: '排序',\n          // 表示, 将当前列定义为模板列\n          type: 'template',\n          // 表示当前列使用模板名称\n          template: 'order'\n        },\n        {\n          label: '操作',\n          // 表示, 将当前列定义为模板列\n          type: 'template',\n          // 表示当前列使用模板名称\n          template: 'opt'\n        }\n      ],\n      // 控制添加分类对话框的显示与隐藏\n      addCateDialogVisible: false,\n      // 添加分类的表单数据对象\n      addCateForm: {\n        // 将要添加的分类的名称\n        cat_name: '',\n        // 父级分类的Id\n        cat_pid: 0,\n        // 分类的等级, 默认要添加的是一级分类\n        cat_level: 0\n      },\n      // 添加分类表单的校验规则对象\n      addCateFormRules: {\n        cat_name: [{\n          required: true,\n          message: '请输入分类名称',\n          trigger: 'blur'\n        }]\n      },\n      // 父级分类的列表\n      parentCateList: [],\n      // 指定级联选择器的配置对象\n      cascadeProps: {\n        value: 'cat_id',\n        label: 'cat_name',\n        children: 'children',\n        // 从el-cascader标签的属性,中移动到这个cascadeProps中\n        expandTrigger: 'hover'\n      },\n      // 选中的父级分类的Id数组\n      selectedKeys: [],\n      // 控制修改分类对话框的显示与隐藏\n      editCateDialogVisible: false,\n      // 修改分类的表单数据对象\n      editCateForm: {}\n    }\n  },\n  created () {\n    this.getCateList()\n  },\n  methods: {\n    /**\n     * 获取所有商品分类\n     */\n    async getCateList () {\n      const { data: res } = await this.$http.get('categories', { params: this.queryInfo })\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品分类失败!')\n      } else {\n        // 把数据列表, 赋值给cateList\n        this.cateList = res.data.result\n        // 为总数据条数赋值\n        this.total = res.data.total\n        console.log(this.cateList)\n        // return this.$message.success('')\n      }\n    },\n    /**\n     * 监听pagesize改变\n     */\n    handleSizeChange (newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getCateList()\n    },\n    /**\n     * 监听pagenum改变\n     * @param newPage\n     */\n    handleCurrentChange (newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getCateList()\n    },\n    /**\n     * 点击按钮, 展示\n     */\n    showAddCateDialog () {\n      // 先获取父级分类的数据列表\n      this.getParentCateList()\n      // 再展示出对话框\n      this.addCateDialogVisible = true\n    },\n    /**\n     * 获取父级分类的数据列表\n     */\n    async getParentCateList () {\n      // type : 2 表示实现两层的分类列表, 例如  大家电 -> 电视\n      const { data: res } = await this.$http.get('categories', {\n        params: { type: 2 }\n      })\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取父级数据失败!')\n      }\n      this.parentCateList = res.data\n    },\n    /**\n     * 选择项发生变化触发这个函数\n     */\n    parentCateChanged () {\n      console.log(this.selectedKeys)\n      // 如果 selectedKeys数组中的length 大于 0, 证明选中的父级分类\n      // 反之, 就说明没有选中任何父级分类\n      if (this.selectedKeys.length > 0) {\n        // 父级分类的Id\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\n        // 为当前分类的等级赋值\n        this.addCateForm.cat_level = this.selectedKeys.length\n      } else {\n        // 父级分类的Id\n        this.addCateForm.cat_pid = 0\n        // 为当前分类的等级赋值\n        this.addCateForm.cat_level = 0\n      }\n    },\n    /**\n     * 点击按钮, 添加新的分类\n     */\n    async addCate () {\n      // console.log(this.addCateForm)\n      this.$refs.addCateFormRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post('categories', this.addCateForm)\n\n        if (res.meta.status !== 201) {\n          return this.$message.error('添加分类失败')\n        } else {\n          this.addCateDialogVisible = false\n          this.getCateList()\n          this.$message.success('添加分类成功')\n        }\n      })\n    },\n    /**\n     * 监听对话框的关闭事件, 重置表单数据\n     */\n    addCateDialogClosed () {\n      this.$refs.addCateFormRef.resetFields()\n      /**\n       * 注意点: 重置下拉框和表单里面的数据!!!\n       * @type {*[]}\n       */\n      this.selectedKeys = []\n      this.addCateForm.cat_level = 0\n      this.addCateForm.cat_pid = 0\n    },\n    /**\n     * 根据分类id删除分类\n     * @param id\n     */\n    async removeCateById (id) {\n      // 弹框询问用户是否直接删除数据\n      const confirmResult = await this.$confirm('此操作将永久删除该分类, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n      if (confirmResult === 'confirm') {\n        console.log('确认了删除')\n        const { data: res } = await this.$http.delete(`categories/${id}`)\n        if (res.meta.status !== 200) {\n          return this.$message.error('删除分类失败!')\n        } else {\n          this.getCateList()\n          return this.$message.success('删除分类成功!')\n        }\n      }\n    },\n    /**\n     * 展现修改对话框的显示与隐藏\n     * @param id\n     */\n    async showEditDialog (id) {\n      const { data: res } = await this.$http.get(`categories/${id}`)\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取分类失败')\n      } else {\n        this.editCateForm = res.data\n        this.editCateDialogVisible = true\n      }\n    },\n    /**\n     * 编辑分类\n     */\n    async editCate () {\n      this.$refs.editCateFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        const { data: res } = await this.$http.put(`categories/${this.editCateForm.cat_id}`,\n          {\n            cat_name: this.editCateForm.cat_name\n          }\n        )\n        if (res.meta.status !== 200) {\n          this.$message.error('更新分类失败!')\n        } else {\n          this.editCateDialogVisible = false\n          this.getCateList()\n          this.$message.success('更新分类成功!')\n        }\n      })\n    },\n    /**\n     * 监听 修改分类对话框的关闭事件\n     */\n    editCateDialogClosed () {\n      this.$refs.editCateFormRef.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n\n.tree-table {\n  margin-top: 15px;\n  font-size: 13px;\n}\n\n.el-cascader {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":"src/components/goods"}]}